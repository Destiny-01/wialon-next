import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useEffect, useState } from 'react';

const inter = Inter({ subsets: ['latin'] });
export async function getStaticProps() {
  var wialon = require('wialon');

  let resource, unit, unit_group;

  var opts = {
    // authz params
    authz: {
      token:
        'cff41ecd2f9615c24a95c8e9d906cde9DFC283DDD9407133F3B10D5E589A8419681732CF',
    },
  };

  var session = wialon(opts).session;
  var paramsResource = {
    spec: {
      itemsType: 'avl_resource',
      propType: 'propitemname',
      propName: 'reporttemplates',
      propValueMask: '*',
      sortType: 'sys_name',
    },
    force: 1,
    flags: 8193,
    from: 0,
    to: 0,
  };

  var paramsUnit = {
    spec: {
      itemsType: 'avl_unit',
      propType: 'propitemname',
      propName: 'reporttemplates',
      propValueMask: '*',
      sortType: 'sys_name',
    },
    force: 1,
    flags: 8193,
    from: 0,
    to: 0,
  };

  var paramsUnitGroup = {
    spec: {
      itemsType: 'avl_unit_group',
      propType: 'propitemname',
      propName: 'reporttemplates',
      propValueMask: '*',
      sortType: 'sys_name',
    },
    force: 1,
    flags: 8193,
    from: 0,
    to: 0,
  };

  await session
    .request('core/search_items', paramsResource)
    .then(async function (data) {
      resource = data.items;
    })
    .catch(function (err) {
      console.log(err);
      return;
    });

  await session
    .request('core/search_items', paramsUnit)
    .then(async function (data) {
      unit = data.items;
    })
    .catch(function (err) {
      console.log(err);
      return;
    });

  await session
    .request('core/search_items', paramsUnitGroup)
    .then(async function (data) {
      unit_group = data.items;
    })
    .catch(function (err) {
      console.log(err);
      return;
    });

  return {
    props: {
      resource,
      unit,
      unit_group,
    },
  };
}

export default function Home({ resource, unit, unit_group }) {
  const [resourceName, setResoureName] = useState('');
  const [pro_unit, setProUnit] = useState([]);

  // console.log('========resource========', resource);
  // console.log('========unit========', unit);
  const onOptionChangeHandler = (event) => {
    setResoureName(event.target.value);
    console.log('User Selected Value - ', event.target.value);
  };

  useEffect(() => {
    const filterUnitGroup = unit_group.filter((item) => {
      const unitGroup = item.nm.split(' ')[0].toLowerCase();
      const resourceGroup = resourceName.split(/[ | - | _]/)[0].toLowerCase();
      return unitGroup === resourceGroup;
    });
    const objectIds = filterUnitGroup[0]?.u;

    function filterObjectsByIds(unit, objectIds) {
      return unit.filter((obj) => objectIds?.includes(obj.id));
    }

    setProUnit(filterObjectsByIds(unit, objectIds));

    console.log('========pro_unit========', pro_unit);
    console.log('========filterUnitGroup========', filterUnitGroup);
  }, [resourceName, unit_group]);
  console.log('========pro_unit outside========', pro_unit);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <div className='my-5'>
          <h1 className='text-center p-2'>
            Wialon Playground - Execute custom report
          </h1>

          <div className='container-sm align-items-center'>
            <div className='row mb-4'>
              <div className='col-lg-6 col-md-6 col-sm-12 col-xxl-3'>
                <div className='card custom-card'>
                  <div className='card-header'>
                    <div className='card-title'>Select resource and table</div>
                  </div>
                  <div className='card-body'>
                    <select
                      id='res'
                      className='js-example-templating js-persons form-control'
                      onChange={onOptionChangeHandler}>
                      <option>Please choose one option</option>
                      {resource.map((item) => (
                        <option value={item.nm} key={item.id}>
                          {item.nm}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>
              </div>
              <div className='col-lg-6 col-md-6 col-sm-12 col-xxl-3'>
                <div className='card custom-card'>
                  <div className='card-header'>
                    <div className='card-title'>Templates</div>
                  </div>
                  <div className='card-body'>
                    <select
                      id='templ'
                      className='js-example-templating js-persons form-control'></select>
                  </div>
                </div>
              </div>
              <div className='col-lg-6 col-md-6 col-sm-12 col-xxl-3'>
                <div className='card custom-card'>
                  <div className='card-header'>
                    <div className='card-title'>Select unit</div>
                  </div>
                  <div className='card-body'>
                    <select
                      id='units'
                      className='js-example-templating js-persons form-control'>
                      {pro_unit.map((item) => (
                        <option value={item.nm} key={item.id}>
                          {item.nm}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>
              </div>
              <div className='col-lg-6 col-md-6 col-sm-12 col-xxl-3'>
                <div className='card custom-card'>
                  <div className='card-header'>
                    <div className='card-title'>Select time interval</div>
                  </div>
                  <div className='card-body'>
                    <select
                      id='interval'
                      className='js-example-templating js-persons form-control'>
                      <option
                        value='86400'
                        title='60 sec * 60 minutes * 24 hours = 86400 sec = 1 day'>
                        Last day
                      </option>
                      <option
                        value='604800'
                        title='86400 sec * 7 days = 604800 sec = 1 week'>
                        Last week
                      </option>
                      <option
                        value='2592000'
                        title='86400 sec * 30 days = 2592000 sec = 1 month'>
                        Last month
                      </option>
                    </select>
                  </div>
                </div>
              </div>
            </div>

            <div className='row'>
              <div className='btn-list'>
                <input
                  className='btn btn-info'
                  id='exec_btn'
                  type='button'
                  value='Execute report'
                />
              </div>
            </div>
            <div id='log'></div>
          </div>
        </div>
      </main>
    </>
  );
}
